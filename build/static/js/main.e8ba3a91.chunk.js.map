{"version":3,"sources":["serviceWorker.js","screens/MainView.js","services/DataTransfer.js","commons/Constants.js","services/API.js","routes.js","screens/Home.js","screens/NotFoundPage.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","react_default","a","createElement","framework7_react_esm","id","url","main","React","Component","services_DataTransfer","F7App","ApiUrl","report","Object","keys","map","key","process","services_API","API","classCallCheck","this","axios","defaults","headers","post","_ref","data","_ref$headers","options","method","objectSpread","access-token","utc-offset","moment","utcOffset","console","log","JSON","stringify","formData","POST","Content-Type","routes","path","component","state","fileSelected","jsonIput","enableExport","strong","type","accept","onChange","fileOnChange","bind","renderFileInfo","fill","onClick","onCopy","renderReportExport","csv","lines","split","result","i","length","obj","currentline","j","push","event","target","files","file","setState","readFileAsText","fileName","name","fileToRead","reader","FileReader","readAsText","onload","loadHandler","onerror","errorHandler","error","contentRaw","content","csvJSON","parse","svg_content","svg","Blob","FormData","append","then","res","className","item","index","ths","forEach","concat","tds","onTime","dataByDate","dataByDateByUser","date","items","userId","dataByDateByUserFirstCheck","dateItems","uid","uindex","firstItem","firstTime","time","diff","_this2","filterData","dataFull","theadArr","bodyArr","renderThs","tr","renderTds","dataFiltered","objArray","array","str","line","fileTitle","unshift","jsonObject","convertToCSV","exportedFilenmae","blob","link","document","download","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","exportCSVFile","title","MainApp","_this","$f7ready","f7","on","newRoute","previousRoute","router","onRouterChange","DataTransfer","f7params","theme","params","MainView_default","Framework7","use","Framework7React","ReactDOM","render","App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8ba3a91.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { View } from 'framework7-react';\n\nexport default class extends React.Component {\n\n    render() {\n        return <View id=\"main-view\" url=\"/\" main />;\n    }\n    onPageBeforeIn() {\n        // do something on page before in\n    }\n    onPageInit() {\n        // do something on page init\n    }\n}\n","class DataTransfer {\n    F7App = null;\n}\n\nexport default new DataTransfer();\n","/**\n * API URL\n */\nconst apiBaseUrl = process.env.REACT_APP_API_URL;\n\nexport const ApiUrl = {\n    report:'report'\n};\n\nObject.keys(ApiUrl).map((key) => (ApiUrl[key] = apiBaseUrl + ApiUrl[key]));","import { ApiUrl } from '../commons/Constants';\nimport moment from 'moment';\nimport axios from 'axios';\n\nconst getHeaders = () => ({\n    'access-token': '',\n    'utc-offset': moment().utcOffset()\n});\n\nclass API {\n    constructor() {\n        axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n\n    POST({url,data,headers={}}) {\n        const options = {\n            method: 'POST',\n            headers: { ...getHeaders(),...headers },\n            data: data,\n            url,\n          };\n          console.log(JSON.stringify(options.headers));\n        return axios(options);\n    }\n\n    report(formData) {\n        return this.POST({\n            url:ApiUrl.report,\n            data:formData,\n            headers:{\n                'Content-Type':'multipart/form-data'\n            }\n        });\n    }\n}\n\nexport default new API();\n","import MainView from \"./screens/MainView\";\nimport Home from \"./screens/Home\";\nimport NotFoundPage from \"./screens/NotFoundPage\";\n\nexport default [\n    {\n        path: \"/\",\n        component: Home\n    },\n    {\n        path: \"/not-found\",\n        component: NotFoundPage\n    },\n\n];\n","import React from 'react';\nimport { Block, BlockTitle, Navbar, NavTitle, Page, Button } from 'framework7-react';\nimport API from '../services/API';\nimport DataTransfer from '../services/DataTransfer';\nimport moment from 'moment';\nimport './Home.scss';\n\nexport default class extends React.Component {\n    state = {\n        fileSelected: null,\n        jsonIput: null,\n        enableExport: false\n    };\n    fileSelected = null;\n    \n    render() {\n        return (\n            <Page id=\"Page-Home\">\n                <Navbar>\n                    <NavTitle>Risk Report Generator</NavTitle>\n                </Navbar>\n\n                <Block strong>\n                    <label id=\"lblChooseFile\">\n                        Choose a json file ...\n                        <input type=\"file\" id=\"fileInput\" accept=\".csv\" onChange={this.fileOnChange.bind(this)} />\n                    </label>\n                    {this.renderFileInfo()}\n                </Block>\n                <Block strong>\n                    <Button fill onClick={this.onCopy.bind(this)}>\n                        Download CSV\n                    </Button>\n                </Block>\n                <Block id=\"items\">{this.renderReportExport()}</Block>\n            </Page>\n        );\n    }\n    \n    csvJSON(csv) {\n        var lines = csv.split('\\n');\n\n        var result = [];\n\n        var headers = lines[0].split(',');\n\n        for (var i = 1; i < lines.length; i++) {\n            var obj = {};\n            var currentline = lines[i].split(',');\n\n            for (var j = 0; j < headers.length; j++) {\n                obj[headers[j]] = currentline[j];\n            }\n\n            result.push(obj);\n        }\n\n        //return result; //JavaScript object\n        return JSON.stringify(result); //JSON\n    }\n\n    fileOnChange(event) {\n        console.log('fileOnChange', event.target.files[0]);\n        const file = event.target.files[0];\n        this.setState({\n            jsonIput: null,\n            enableExport: false\n        });\n\n        this.fileSelected = null;\n\n        if (file) {\n            this.readFileAsText(file);\n            this.fileSelected = file;\n            this.fileName = file.name;\n        }\n    }\n\n    readFileAsText(fileToRead) {\n        const reader = new FileReader();\n        // Read file into memory as UTF-8\n        reader.readAsText(fileToRead);\n        // Handle errors load\n        reader.onload = this.loadHandler.bind(this);\n        reader.onerror = this.errorHandler.bind(this);\n    }\n\n    errorHandler(event) {\n        if (event.target.error && event.target.error.name == 'NotReadableError') {\n            console.log(\"Canno't read file !\");\n        }\n    }\n\n    loadHandler(event) {\n        const target = event.target;\n        const contentRaw = target.result;\n        if (contentRaw) {\n            try {\n                const content = this.csvJSON(contentRaw);\n                console.log({ target, fileSelected: this.fileSelected });\n                const jsonIput = JSON.parse(content);\n                this.jsonIput = jsonIput;\n                this.enableExport = true;\n\n                console.log({ jsonIput });\n                this.setState({\n                    enableExport: true,\n                    jsonIput\n                });\n            } catch (error) {\n                console.log({ error });\n                this.setState({\n                    enableExport: false\n                });\n            }\n        }\n    }\n\n    export() {}\n\n    reportOnCompleted(data) {\n        console.log('reportOnCompleted::::', data);\n        const svg_content = data.svg;\n        const file = new Blob([svg_content], { type: 'image/svg+xml' });\n        const formData = new FormData();\n        formData.append('svg-file', file, 'fileName.svg');\n        formData.append('description', 'description report');\n        API.report(formData).then((res) => {\n            console.log('res', res);\n        });\n    }\n    renderFileInfo() {\n        if (!this.state.enableExport) return null;\n        return (\n            <div id=\"file-info\">\n                <div className=\"file-name\">{this.fileSelected ? this.fileSelected.name : ''}</div>\n            </div>\n        );\n    }\n\n    renderThs(item, index) {\n        let ths = [];\n        Object.keys(item).forEach((key, i) => {\n            ths.push(<th key={`item-th-${index}-${i}`}>{key}</th>);\n        });\n        return ths;\n    }\n\n    renderTds(item, index) {\n        let tds = [];\n        Object.keys(item).forEach((key, i) => {\n            tds.push(<td key={`item-td-${index}-${i}`}>{item[key]}</td>);\n        });\n        return tds;\n    }\n    filterData(data) {\n        const onTime = moment('09:00:00', 'HH:mm:ss');\n        let dataByDate = {};\n        data.forEach((item, index) => {\n            if (item['Date']) {\n                if (!dataByDate[item['Date']]) {\n                    dataByDate[item['Date']] = [];\n                }\n                dataByDate[item['Date']].push(item);\n            }\n        });\n        let dataByDateByUser = {};\n        Object.keys(dataByDate).forEach((date, index) => {\n            const items = dataByDate[date];\n            if (!dataByDateByUser[date]) {\n                dataByDateByUser[date] = {};\n            }\n            items.forEach((item) => {\n                let userId = item['User ID'];\n                if (!dataByDateByUser[date][userId]) {\n                    dataByDateByUser[date][userId] = [];\n                }\n                dataByDateByUser[date][userId].push(item);\n            });\n        });\n        let dataByDateByUserFirstCheck = {};\n        console.log({ dataByDateByUser });\n        Object.keys(dataByDateByUser).forEach((date, index) => {\n            const dateItems = dataByDateByUser[date];\n\n            if (!dataByDateByUserFirstCheck[date]) {\n                dataByDateByUserFirstCheck[date] = [];\n            }\n            console.log({ dateItems });\n            Object.keys(dateItems).forEach((uid, uindex) => {\n                const userItems = dateItems[uid] || [];\n\n                const firstItem = userItems[0];\n\n                if (firstItem) {\n                    let firstTime = firstItem['Time'];\n                    let time = moment(firstTime, 'HH:mm:ss');\n                    if (onTime.diff(time) <= 0) {\n                        dataByDateByUserFirstCheck[date].push(firstItem);\n                    }\n                }\n            });\n        });\n        return dataByDateByUserFirstCheck;\n    }\n    renderReportExport() {\n        let data = [];\n        if (!this.state.jsonIput) return null;\n        data = this.state.jsonIput || [];\n        data = this.filterData(data);\n        console.log({ data });\n        // return null;\n        // Class: \"Visitor\"\n        // Date: \"2019-02-11\"\n        // Employee ID: \"\"\n        // External Device: \"\"\n        // Mode: \"Out\"\n        // Name: \"\"\n        // \"Pass Count\n        // \": \"0\n        // \"\n        // Property: \"1000\"\n        // Result: \"Capture Failed\"\n        // Terminal ID: \"0001 : Main Door\"\n        // Time: \"07:44:03\"\n        // Type: \"1:N\"\n        // User ID: \"****\"\n        const dataFull = [];\n        let theadArr = null;\n        let bodyArr = [];\n        Object.keys(data).forEach((date, i) => {\n            const items = data[date];\n            if (i === 0) {\n                theadArr = <tr key={`item-thead-${date}-${i}`}>{this.renderThs(items[0], i)}</tr>;\n            }\n            items.forEach((item, index) => {\n                dataFull.push(item);\n                let tr = <tr key={`item-${date}-${index}`}>{this.renderTds(item, index)}</tr>;\n                bodyArr.push(tr);\n            });\n        });\n        this.dataFiltered = dataFull;\n        console.log({ dataFull });\n\n        return (\n            <table>\n                <thead>{theadArr}</thead>\n                <tbody>{bodyArr}</tbody>\n            </table>\n        );\n    }\n    \n\n    convertToCSV(objArray) {\n        var array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n        var str = '';\n\n        for (var i = 0; i < array.length; i++) {\n            var line = '';\n            for (var index in array[i]) {\n                if (line != '') line += ',';\n\n                line += array[i][index];\n            }\n\n            str += line + '\\r\\n';\n        }\n\n        return str;\n    }\n    exportCSVFile(items, fileTitle) {\n        var headers = {};\n        Object.keys(items[0]).forEach((key) => {\n            headers[key] = key;\n        });\n        items.unshift(headers);\n        // Convert Object to JSON\n        var jsonObject = JSON.stringify(items);\n\n        var csv = this.convertToCSV(jsonObject);\n\n        var exportedFilenmae = fileTitle + '_download.csv' || 'export.csv';\n\n        var blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n\n        var link = document.createElement('a');\n        console.log('link.download', link.download);\n        var url = URL.createObjectURL(blob);\n        link.className = 'external';\n        link.setAttribute('href', url);\n        link.setAttribute('download', exportedFilenmae);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n    onCopy() {\n        this.exportCSVFile(this.dataFiltered, this.fileName);\n    }\n}\n","import React from 'react';\nimport { Page, Navbar,List,ListItem } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"My Page\" />\n    <List>\n      <ListItem title=\"Item 1\" />\n      <ListItem title=\"Item 2\" />\n    </List>\n  </Page>\n);","import React from 'react';\nimport { App, View, Statusbar } from 'framework7-react';\nimport MainView from './screens/MainView';\nimport DataTransfer from './services/DataTransfer';\n\nimport routes from './routes';\n\nexport default class MainApp extends React.Component {\n    \n    componentDidMount() {\n        this.$f7ready && this.$f7ready((f7) => {\n            window.f7 = f7;\n            f7.on('routeChange', (newRoute, previousRoute, router) => {\n                this.onRouterChange(newRoute, previousRoute, router);\n            });\n            DataTransfer.F7App = f7;\n        });\n    }\n    onRouterChange(newRoute, previousRoute, router) {\n        console.log(newRoute, previousRoute, router);\n    }\n\n    render() {\n        const f7params = {\n            id: 'jp.co.omron.healthcare.riskreport', // App bundle ID\n            name: 'Risk Report', // App name\n            theme: 'ios', // Automatic theme detection\n            routes\n        };\n        return (\n            <App params={f7params}>\n                {/* Statusbar */}\n                <Statusbar />\n                {/* Main View */}\n                <MainView />\n            </App>\n        );\n    }\n}\n","\n\n// Import React and ReactDOM\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n// Import Framework7\nimport Framework7 from 'framework7/framework7.esm.bundle';\n// Import Framework7-React plugin\nimport Framework7React from 'framework7-react';\n// Framework7 styles\nimport 'framework7/css/framework7.min.css';\nimport './styles/icons.css';\n\n// page\nimport './index.scss';\n\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(\n  React.createElement(App),\n  document.getElementById('app'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}