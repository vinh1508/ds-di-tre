{"version":3,"sources":["serviceWorker.js","screens/MainView.js","services/DataTransfer.js","commons/Constants.js","services/API.js","routes.js","screens/Home.js","screens/NotFoundPage.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","react_default","a","createElement","framework7_react_esm","id","url","main","React","Component","services_DataTransfer","F7App","ApiUrl","report","Object","keys","map","key","process","API","classCallCheck","this","axios","defaults","headers","post","_ref","data","_ref$headers","options","method","objectSpread","access-token","utc-offset","moment","utcOffset","console","log","JSON","stringify","formData","POST","Content-Type","routes","path","component","fileSelected","dataTopDiTre","dataDsDiTre","state","jsonIput","enableExport","strong","type","accept","onChange","fileOnChange","bind","renderFileInfo","fill","onClick","onCopy","renderDSDiTre","csv","lines","split","result","i","length","obj","currentline","j","push","event","target","files","file","setState","readFileAsText","fileName","name","fileToRead","reader","FileReader","readAsText","onload","loadHandler","onerror","errorHandler","error","contentRaw","content","csvJSON","parse","className","item","index","keyPrefix","arguments","undefined","ths","forEach","concat","tds","value","temp","prop","hasOwnProperty","_this2","mmLateOnTime","dataByDate","keyDate","dataByDateByUser","items","userId","dataDsDiTreByDate","dataDsDiTreByUser","dateItems","uid","uindex","firstItem","time","mmDate","ym","format","dayOfWeekIso","includes","diff","newItem","addToObject","newItem2","User ID","total","date","_this3","_this$filterData","filterData","dataFull","theadArr","bodyArr","renderThs","tr","renderTds","theadArr2","bodyArr2","users","orderBy","userData","join","objArray","array","str","line","fileTitle","unshift","jsonObject","convertToCSV","exportedFileName","blob","Blob","saveAs","arr","pop","exportCSVFile","title","MainApp","_this","$f7ready","f7","on","newRoute","previousRoute","router","onRouterChange","DataTransfer","f7params","theme","params","MainView_default","Framework7","use","Framework7React","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wOAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4RCZE,OAAOC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,YAAYC,IAAI,IAAIC,MAAI,2FAHnBC,IAAMC,WCCpBC,EAAA,0CAHXC,MAAQ,cCICC,EAAS,CAClBC,OAAO,UAGXC,OAAOC,KAAKH,GAAQI,IAAI,SAACC,GAAD,OAAUL,EAAOK,GANtBC,6BAM0CN,EAAOK,8CC2BrD,eA1BX,SAAAE,IAAeL,OAAAM,EAAA,EAAAN,CAAAO,KAAAF,GACXG,IAAMC,SAASC,QAAQC,KAAK,gBAAkB,wFAGtB,IAAtBnB,EAAsBoB,EAAtBpB,IAAIqB,EAAkBD,EAAlBC,KAAkBC,EAAAF,EAAbF,eAAa,IAAAI,EAAL,GAAKA,EAClBC,EAAU,CACZC,OAAQ,OACRN,QAAQV,OAAAiB,EAAA,EAAAjB,CAAA,GAbM,CACtBkB,eAAgB,GAChBC,aAAcC,MAASC,aAWeX,GAC9BG,KAAMA,EACNrB,OAGJ,OADE8B,QAAQC,IAAIC,KAAKC,UAAUV,EAAQL,UAC9BF,IAAMO,kCAGVW,GACH,OAAOnB,KAAKoB,KAAK,CACbnC,IAAIM,EAAOC,OACXc,KAAKa,EACLhB,QAAQ,CACJkB,eAAe,kDC1BhBC,SAAA,CACX,CACIC,KAAM,IACNC,qNCIJC,aAAe,OACfC,aAAe,KACfC,YAAc,KAEdC,MAAQ,CACJH,aAAc,KACdI,SAAU,KACVC,cAAc,2EAId,OACIlD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,aACLJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,6BAGJH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOgD,QAAM,GACTnD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,SAAOE,GAAG,iBAAV,yBAEIJ,EAAAC,EAAAC,cAAA,SACIkD,KAAK,OACLhD,GAAG,YACHiD,OAAO,OACPC,SAAUlC,KAAKmC,aAAaC,KAAKpC,SAGxCA,KAAKqC,iBACLrC,KAAK4B,MAAMC,SACRjD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQuD,MAAI,EAACC,QAASvC,KAAKwC,OAAOJ,KAAKpC,OAAvC,gBAGA,MAERpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,QAGRH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,GAAG,aAAagB,KAAKyC,kDAKhCC,GAOJ,IANA,IAAIC,EAAQD,EAAIE,MAAM,MAElBC,EAAS,GAET1C,EAAUwC,EAAM,GAAGC,MAAM,KAEpBE,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAAK,CAInC,IAHA,IAAIE,EAAM,GACNC,EAAcN,EAAMG,GAAGF,MAAM,KAExBM,EAAI,EAAGA,EAAI/C,EAAQ4C,OAAQG,IAChCF,EAAI7C,EAAQ+C,IAAMD,EAAYC,GAGlCL,EAAOM,KAAKH,GAIhB,OAAO/B,KAAKC,UAAU2B,wCAGbO,GACTrC,QAAQC,IAAI,eAAgBoC,EAAMC,OAAOC,MAAM,IAC/C,IAAMC,EAAOH,EAAMC,OAAOC,MAAM,GAChCtD,KAAKwD,SAAS,CACV3B,SAAU,KACVC,cAAc,IAGlB9B,KAAKyB,aAAe,KAEhB8B,IACAvD,KAAKyD,eAAeF,GACpBvD,KAAKyB,aAAe8B,EACpBvD,KAAK0D,SAAWH,EAAKI,6CAIdC,GACX,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,WAAWH,GAElBC,EAAOG,OAAShE,KAAKiE,YAAY7B,KAAKpC,MACtC6D,EAAOK,QAAUlE,KAAKmE,aAAa/B,KAAKpC,2CAG/BoD,GACLA,EAAMC,OAAOe,OAAoC,oBAA3BhB,EAAMC,OAAOe,MAAMT,MACzC5C,QAAQC,IAAI,2DAIRoC,GACR,IAAMC,EAASD,EAAMC,OACfgB,EAAahB,EAAOR,OAC1B,GAAIwB,EACA,IACI,IAAMC,EAAUtE,KAAKuE,QAAQF,GAC7BtD,QAAQC,IAAI,CAAEqC,SAAQ5B,aAAczB,KAAKyB,eACzC,IAAMI,EAAWZ,KAAKuD,MAAMF,GAC5BtE,KAAK6B,SAAWA,EAChB7B,KAAK8B,cAAe,EAEpBf,QAAQC,IAAI,CAAEa,aACd7B,KAAKwD,SAAS,CACV1B,cAAc,EACdD,aAEN,MAAOuC,GACLrD,QAAQC,IAAI,CAAEoD,UACdpE,KAAKwD,SAAS,CACV1B,cAAc,8CAO1B,OAAK9B,KAAK4B,MAAME,aAEZlD,EAAAC,EAAAC,cAAA,OAAKE,GAAG,aACJJ,EAAAC,EAAAC,cAAA,OAAK2F,UAAU,aAAazE,KAAKyB,aAAezB,KAAKyB,aAAakC,KAAO,KAH5C,uCAQ/Be,EAAMC,GAAuB,IAAhBC,EAAgBC,UAAA9B,OAAA,QAAA+B,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAC3BE,EAAM,GAQV,OAPAtF,OAAOC,KAAKgF,GAAM,IAAIM,QAAQ,SAACpF,EAAKkD,GAChCiC,EAAI5B,KACAvE,EAAAC,EAAAC,cAAA,MAAIc,IAAG,GAAAqF,OAAKL,EAAL,YAAAK,OAAyBN,EAAzB,KAAAM,OAAkCnC,GAAK2B,UAAS,QAAAQ,OAAUnC,EAAV,aAAAmC,OAAuBnC,IAC1ElE,EAAAC,EAAAC,cAAA,YAAOc,OAIZmF,oCAGDL,EAAMC,GAAuB,IAAhBC,EAAgBC,UAAA9B,OAAA,QAAA+B,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAC3BK,EAAM,GAQV,OAPAzF,OAAOC,KAAKgF,GAAMM,QAAQ,SAACpF,EAAKkD,GAC5BoC,EAAI/B,KACAvE,EAAAC,EAAAC,cAAA,MAAIc,IAAG,GAAAqF,OAAKL,EAAL,YAAAK,OAAyBN,EAAzB,KAAAM,OAAkCnC,GAAK2B,UAAS,QAAAQ,OAAUnC,EAAV,aAAAmC,OAAuBnC,IAC1ElE,EAAAC,EAAAC,cAAA,YAAO4F,EAAK9E,QAIjBsF,sCAGClC,IAAqB2B,GAAO,IAArB/E,EAAqBS,EAArBT,IAAKuF,EAAgB9E,EAAhB8E,MAEhBC,EAAO,GACPtC,EAAI,EAGR,IAAK,IAAIuC,KAAQrC,EACTA,EAAIsC,eAAeD,KAEfvC,IAAM6B,GAAS/E,GAAOuF,IACtBC,EAAKxF,GAAOuF,GAIhBC,EAAKC,GAAQrC,EAAIqC,GAGjBvC,KASR,OAJK6B,GAAS/E,GAAOuF,IACjBC,EAAKxF,GAAOuF,GAGTC,2CAGyBP,UAAA9B,OAAA,QAAA+B,IAAAD,UAAA,IAAAA,UAAA,GAAAA,UAAA9B,OAAA,QAAA+B,IAAAD,UAAA,IAAAA,UAAA,sCAEzBvE,GAAM,IAAAiF,EAAAvF,KACPwF,EAAe3E,IA9LR,WA8L6B,YACtC4E,EAAa,GACjBnF,EAAK0E,QAAQ,SAACN,EAAMC,GAChB,IAAIe,EAAUhB,EAAI,KACdgB,IACKD,EAAWC,KACZD,EAAWC,GAAW,IAE1BD,EAAWC,GAASvC,KAAKuB,MAGjC,IAAIiB,EAAmB,GACvBlG,OAAOC,KAAK+F,GAAYT,QAAQ,SAACU,EAASf,GACtC,IAAMiB,EAAQH,EAAWC,GACpBC,EAAiBD,KAClBC,EAAiBD,GAAW,IAEhCE,EAAMZ,QAAQ,SAACN,GACX,IAAImB,EAASnB,EAAK,WACbiB,EAAiBD,GAASG,KAC3BF,EAAiBD,GAASG,GAAU,IAExCF,EAAiBD,GAASG,GAAQ1C,KAAKuB,OAG/C,IAAIoB,EAAoB,GACpBC,EAAoB,GAmDxB,OAlDAhF,QAAQC,IAAI,CAAE2E,qBACdlG,OAAOC,KAAKiG,GAAkBX,QAAQ,SAACU,EAASf,GAC5C,IAAMqB,EAAYL,EAAiBD,GAE9BI,EAAkBJ,KACnBI,EAAkBJ,GAAW,IAEjCjG,OAAOC,KAAKsG,GAAWhB,QAAQ,SAACiB,EAAKC,GACjC,IAEMC,GAFYH,EAAUC,IAAQ,IAER,GAE5B,GAAIE,EAAW,CACX,IAAIC,EAAOvF,IAAOsF,EAAS,KAAU,YAC/BE,EAASxF,IAAO6E,GAChBY,EAAKD,EAAOE,OAAO,WACnBC,EAAeH,EAAOE,OAAO,KAEnC,IAAK,CAAC,IAAK,KAAKE,SAASD,IACjBhB,EAAakB,KAAKN,IAAS,EAAG,CAC9B,IAAMO,EAAUpB,EAAKqB,YACjBT,EACA,CACIvG,IAAK,MACLuF,MAAOkB,EAAOE,OAAO,SAEzB,GAOJ,GALAT,EAAkBJ,GAASvC,KAAKwD,GAC3BZ,EAAkBO,KACnBP,EAAkBO,GAAM,IAGxBP,EAAkBO,GAAIL,GACtBF,EAAkBO,GAAIL,GAAtB,MAAsCF,EAAkBO,GAAIL,GAAtB,MAAsC,EAC5EF,EAAkBO,GAAIL,GAAtB,KAAmC9C,KAAKgD,EAAS,UAC9C,CACH,IAAMU,EAAW,CACbC,UAAWX,EAAU,WACrBxC,KAAMwC,EAAS,KACfY,MAAO,EACPC,KAAM,CAACb,EAAS,OAEpBJ,EAAkBO,GAAIL,GAAOY,SAO9C,CAAEf,oBAAmBC,6DAGhB,IAAAkB,EAAAjH,KACRM,EAAO,GACX,IAAKN,KAAK4B,MAAMC,SAAU,OAAO,KACjCvB,EAAON,KAAK4B,MAAMC,UAAY,GAHlB,IAAAqF,EAIqClH,KAAKmH,WAAW7G,GAAzDwF,EAJIoB,EAIJpB,kBAAmBC,EAJfmB,EAIenB,kBAC3BhF,QAAQC,IAAI,CAAE8E,oBAAmBC,sBACjCzF,EAAOwF,EACP,IAAMsB,EAAW,GACbC,EAAW,KACXC,EAAU,GACd7H,OAAOC,KAAKY,GAAM0E,QAAQ,SAACgC,EAAMlE,GAC7B,IAAM8C,EAAQtF,EAAK0G,IACdK,GAAYzB,EAAM,KACnByB,EAAWzI,EAAAC,EAAAC,cAAA,MAAIc,IAAG,cAAAqF,OAAgB+B,EAAhB,KAAA/B,OAAwBnC,IAAMmE,EAAKM,UAAU3B,EAAM,GAAI9C,EAAG,cAEhF8C,EAAMZ,QAAQ,SAACN,EAAMC,GACjByC,EAASjE,KAAKuB,GACd,IAAI8C,EAAK5I,EAAAC,EAAAC,cAAA,MAAIc,IAAG,QAAAqF,OAAU+B,EAAV,KAAA/B,OAAkBN,IAAUsC,EAAKQ,UAAU/C,EAAMC,EAAO,aACxE2C,EAAQnE,KAAKqE,OAGrBxH,KAAK2B,YAAcyF,EACnBrG,QAAQC,IAAI,CAAEoG,aACd,IAAIM,EAAY,KACZC,EAAW,GACXjG,EAAe,GAmBnB,OAlBAjC,OAAOC,KAAKqG,GAAmBf,QAAQ,SAACsB,EAAI3B,GACxC,IAAMiD,EAAQC,kBAAQ9B,EAAkBO,GAAK,QAAS,QACtD7G,OAAOC,KAAKkI,GAAO5C,QAAQ,SAACa,EAAQlB,GAChC,IAAMmD,EAAWF,EAAM/B,GACvB,GAAGiC,EAAS,CACRA,EAASd,KAAOc,EAASd,KAAKe,KAAK,KAC9BL,IACDA,EAAY9I,EAAAC,EAAAC,cAAA,MAAIc,IAAG,qBAAAqF,OAAuBY,EAAvB,KAAAZ,OAAiCN,IAAUsC,EAAKM,UAAUO,EAAUnD,KAE3F,IAAIO,EAAM+B,EAAKQ,UAAUK,EAAUnD,EAAO,WACpC6C,EAAK5I,EAAAC,EAAAC,cAAA,MAAIc,IAAG,cAAAqF,OAAgBN,IAAUO,GAC5CyC,EAASxE,KAAKqE,GACd9F,EAAayB,KAAK2E,QAI9B9H,KAAK0B,aAAeA,EAGhB9C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,OAAK2F,UAAU,mBACX7F,EAAAC,EAAAC,cAAA,SAAO2F,UAAU,UACb7F,EAAAC,EAAAC,cAAA,aAAQuI,GACRzI,EAAAC,EAAAC,cAAA,aAAQwI,MAIpB1I,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,OAAK2F,UAAU,mBACX7F,EAAAC,EAAAC,cAAA,SAAO2F,UAAU,UACb7F,EAAAC,EAAAC,cAAA,aAAQ4I,GACR9I,EAAAC,EAAAC,cAAA,aAAQ6I,4CAQnBK,GAIT,IAHA,IAAIC,EAA2B,iBAAZD,EAAuB/G,KAAKuD,MAAMwD,GAAYA,EAC7DE,EAAM,GAEDpF,EAAI,EAAGA,EAAImF,EAAMlF,OAAQD,IAAK,CACnC,IAAIqF,EAAO,GACX,IAAK,IAAIxD,KAASsD,EAAMnF,GACR,IAARqF,IAAYA,GAAQ,KAExBA,GAAQF,EAAMnF,GAAG6B,GAGrBuD,GAAOC,EAAO,OAGlB,OAAOD,wCAGGtC,EAAOwC,GACjB,IAAIjI,EAAU,GACdV,OAAOC,KAAKkG,EAAM,IAAIZ,QAAQ,SAACpF,GAC3BO,EAAQP,GAAOA,IAEnBgG,EAAMyC,QAAQlI,GAEd,IAAImI,EAAarH,KAAKC,UAAU0E,GAE5BlD,EAAM1C,KAAKuI,aAAaD,GAExBE,EAAmBJ,EAAY,iBAAmB,aAElDK,EAAO,IAAIC,KAAK,CAAChG,GAAM,CAAEV,KAAM,4BACnC2G,iBAAOF,EAAMD,oCAIb,IAAII,EAAM5I,KAAK0D,SAASd,MAAM,KAC9BgG,EAAIC,MACJ,IAAInF,EAAWkF,EAAIb,KAAK,IACxB/H,KAAK8I,cAAc9I,KAAK2B,YAAa+B,EAAW,SAChD1D,KAAK8I,cAAc9I,KAAK0B,aAAcgC,EAAW,eAvX5BvE,IAAMC,YDD/B,CACImC,KAAM,aACNC,UERO,kBACb5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgK,MAAM,YACdnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUgK,MAAM,WAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUgK,MAAM,iBCDDC,8LAEG,IAAAC,EAAAjJ,KAChBA,KAAKkJ,UAAYlJ,KAAKkJ,SAAS,SAACC,GAC5B3K,OAAO2K,GAAKA,EACZA,EAAGC,GAAG,cAAe,SAACC,EAAUC,EAAeC,GAC3CN,EAAKO,eAAeH,EAAUC,EAAeC,KAEjDE,EAAanK,MAAQ6J,2CAGdE,EAAUC,EAAeC,GACpCxI,QAAQC,IAAIqI,EAAUC,EAAeC,oCAIrC,IAAMG,EAAW,CACb1K,GAAI,oCACJ2E,KAAM,cACNgG,MAAO,MACPrI,UAEJ,OACI1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK6K,OAAQF,GAET9K,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAEAH,EAAAC,EAAAC,cAAC+K,EAAD,cA3BqB1K,IAAMC,qCCY3C0K,IAAWC,IAAIC,KAGfC,IAASC,OACP/K,IAAML,cAAcqL,GACpBC,SAASC,eAAe,QTqGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a61196e0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { View } from 'framework7-react';\n\nexport default class extends React.Component {\n\n    render() {\n        return <View id=\"main-view\" url=\"/\" main />;\n    }\n    onPageBeforeIn() {\n        // do something on page before in\n    }\n    onPageInit() {\n        // do something on page init\n    }\n}\n","class DataTransfer {\n    F7App = null;\n}\n\nexport default new DataTransfer();\n","/**\n * API URL\n */\nconst apiBaseUrl = process.env.REACT_APP_API_URL;\n\nexport const ApiUrl = {\n    report:'report'\n};\n\nObject.keys(ApiUrl).map((key) => (ApiUrl[key] = apiBaseUrl + ApiUrl[key]));","import { ApiUrl } from '../commons/Constants';\nimport moment from 'moment';\nimport axios from 'axios';\n\nconst getHeaders = () => ({\n    'access-token': '',\n    'utc-offset': moment().utcOffset()\n});\n\nclass API {\n    constructor() {\n        axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n\n    POST({url,data,headers={}}) {\n        const options = {\n            method: 'POST',\n            headers: { ...getHeaders(),...headers },\n            data: data,\n            url,\n          };\n          console.log(JSON.stringify(options.headers));\n        return axios(options);\n    }\n\n    report(formData) {\n        return this.POST({\n            url:ApiUrl.report,\n            data:formData,\n            headers:{\n                'Content-Type':'multipart/form-data'\n            }\n        });\n    }\n}\n\nexport default new API();\n","import MainView from \"./screens/MainView\";\nimport Home from \"./screens/Home\";\nimport NotFoundPage from \"./screens/NotFoundPage\";\n\nexport default [\n    {\n        path: \"/\",\n        component: Home\n    },\n    {\n        path: \"/not-found\",\n        component: NotFoundPage\n    },\n\n];\n","import React from 'react';\nimport { Block, BlockTitle, Navbar, NavTitle, Page, Button, Row, Col } from 'framework7-react';\nimport API from '../services/API';\nimport DataTransfer from '../services/DataTransfer';\nimport moment from 'moment';\nimport { orderBy } from 'lodash';\nimport { saveAs } from 'file-saver';\nimport './Home.scss';\n\nconst LATE_ON_TIME = '09:00:00';\nexport default class extends React.Component {\n    fileSelected = null;\n    dataTopDiTre = {};\n    dataDsDiTre = [];\n\n    state = {\n        fileSelected: null,\n        jsonIput: null,\n        enableExport: false\n    };\n\n    render() {\n        return (\n            <Page id=\"Page-Home\">\n                <Navbar>\n                    <NavTitle>Ds đi trễ</NavTitle>\n                </Navbar>\n\n                <Block strong>\n                    <Row>\n                        <Col>\n                            <label id=\"lblChooseFile\">\n                                Choose a json file ...\n                                <input\n                                    type=\"file\"\n                                    id=\"fileInput\"\n                                    accept=\".csv\"\n                                    onChange={this.fileOnChange.bind(this)}\n                                />\n                            </label>\n                            {this.renderFileInfo()}\n                            {this.state.jsonIput ? (\n                                <Button fill onClick={this.onCopy.bind(this)}>\n                                    Download CSV\n                                </Button>\n                            ) : null}\n                        </Col>\n                        <Col />\n                    </Row>\n                </Block>\n                <Block id=\"list-item\">{this.renderDSDiTre()}</Block>\n            </Page>\n        );\n    }\n\n    csvJSON(csv) {\n        var lines = csv.split('\\n');\n\n        var result = [];\n\n        var headers = lines[0].split(',');\n\n        for (var i = 1; i < lines.length; i++) {\n            var obj = {};\n            var currentline = lines[i].split(',');\n\n            for (var j = 0; j < headers.length; j++) {\n                obj[headers[j]] = currentline[j];\n            }\n\n            result.push(obj);\n        }\n\n        //return result; //JavaScript object\n        return JSON.stringify(result); //JSON\n    }\n\n    fileOnChange(event) {\n        console.log('fileOnChange', event.target.files[0]);\n        const file = event.target.files[0];\n        this.setState({\n            jsonIput: null,\n            enableExport: false\n        });\n\n        this.fileSelected = null;\n\n        if (file) {\n            this.readFileAsText(file);\n            this.fileSelected = file;\n            this.fileName = file.name;\n        }\n    }\n\n    readFileAsText(fileToRead) {\n        const reader = new FileReader();\n        // Read file into memory as UTF-8\n        reader.readAsText(fileToRead);\n        // Handle errors load\n        reader.onload = this.loadHandler.bind(this);\n        reader.onerror = this.errorHandler.bind(this);\n    }\n\n    errorHandler(event) {\n        if (event.target.error && event.target.error.name == 'NotReadableError') {\n            console.log(\"Canno't read file !\");\n        }\n    }\n\n    loadHandler(event) {\n        const target = event.target;\n        const contentRaw = target.result;\n        if (contentRaw) {\n            try {\n                const content = this.csvJSON(contentRaw);\n                console.log({ target, fileSelected: this.fileSelected });\n                const jsonIput = JSON.parse(content);\n                this.jsonIput = jsonIput;\n                this.enableExport = true;\n                \n                console.log({ jsonIput });\n                this.setState({\n                    enableExport: true,\n                    jsonIput\n                });\n            } catch (error) {\n                console.log({ error });\n                this.setState({\n                    enableExport: false\n                });\n            }\n        }\n    }\n\n    renderFileInfo() {\n        if (!this.state.enableExport) return null;\n        return (\n            <div id=\"file-info\">\n                <div className=\"file-name\">{this.fileSelected ? this.fileSelected.name : ''}</div>\n            </div>\n        );\n    }\n\n    renderThs(item, index, keyPrefix = '') {\n        let ths = [];\n        Object.keys(item||{}).forEach((key, i) => {\n            ths.push(\n                <th key={`${keyPrefix}item-th-${index}-${i}`} className={`item-${i} item-th-${i}`}>\n                    <span>{key}</span>\n                </th>\n            );\n        });\n        return ths;\n    }\n\n    renderTds(item, index, keyPrefix = '') {\n        let tds = [];\n        Object.keys(item).forEach((key, i) => {\n            tds.push(\n                <td key={`${keyPrefix}item-td-${index}-${i}`} className={`item-${i} item-td-${i}`}>\n                    <span>{item[key]}</span>\n                </td>\n            );\n        });\n        return tds;\n    }\n\n    addToObject(obj, { key, value }, index) {\n        // Create a temp object and index variable\n        let temp = {};\n        let i = 0;\n\n        // Loop through the original object\n        for (let prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                // If the indexes match, add the new item\n                if (i === index && key && value) {\n                    temp[key] = value;\n                }\n\n                // Add the current item in the loop to the temp obj\n                temp[prop] = obj[prop];\n\n                // Increase the count\n                i++;\n            }\n        }\n\n        // If no index, add to the end\n        if (!index && key && value) {\n            temp[key] = value;\n        }\n\n        return temp;\n    }\n\n    groupDataByKey(data = [], key = '') {}\n\n    filterData(data) {\n        const mmLateOnTime = moment(LATE_ON_TIME, 'HH:mm:ss');\n        let dataByDate = {};\n        data.forEach((item, index) => {\n            let keyDate = item['Date'];\n            if (keyDate) {\n                if (!dataByDate[keyDate]) {\n                    dataByDate[keyDate] = [];\n                }\n                dataByDate[keyDate].push(item);\n            }\n        });\n        let dataByDateByUser = {};\n        Object.keys(dataByDate).forEach((keyDate, index) => {\n            const items = dataByDate[keyDate];\n            if (!dataByDateByUser[keyDate]) {\n                dataByDateByUser[keyDate] = {};\n            }\n            items.forEach((item) => {\n                let userId = item['User ID'];\n                if (!dataByDateByUser[keyDate][userId]) {\n                    dataByDateByUser[keyDate][userId] = [];\n                }\n                dataByDateByUser[keyDate][userId].push(item);\n            });\n        });\n        let dataDsDiTreByDate = {};\n        let dataDsDiTreByUser = {};\n        console.log({ dataByDateByUser });\n        Object.keys(dataByDateByUser).forEach((keyDate, index) => {\n            const dateItems = dataByDateByUser[keyDate];\n\n            if (!dataDsDiTreByDate[keyDate]) {\n                dataDsDiTreByDate[keyDate] = [];\n            }\n            Object.keys(dateItems).forEach((uid, uindex) => {\n                const userItems = dateItems[uid] || [];\n\n                const firstItem = userItems[0];\n\n                if (firstItem) {\n                    let time = moment(firstItem['Time'], 'HH:mm:ss');\n                    const mmDate = moment(keyDate);\n                    const ym = mmDate.format('YYYY-MM');\n                    const dayOfWeekIso = mmDate.format('E');\n                    // skip saturday and sunday\n                    if (!['6', '7'].includes(dayOfWeekIso)) {\n                        if (mmLateOnTime.diff(time) <= 0) {\n                            const newItem = this.addToObject(\n                                firstItem,\n                                {\n                                    key: 'day',\n                                    value: mmDate.format('dddd')\n                                },\n                                2\n                            );\n                            dataDsDiTreByDate[keyDate].push(newItem);\n                            if (!dataDsDiTreByUser[ym]) {\n                                dataDsDiTreByUser[ym] = {};\n                            }\n\n                            if (dataDsDiTreByUser[ym][uid]) {\n                                dataDsDiTreByUser[ym][uid]['total'] = dataDsDiTreByUser[ym][uid]['total'] + 1;\n                                dataDsDiTreByUser[ym][uid]['date'].push(firstItem['Date']);\n                            } else {\n                                const newItem2 = {\n                                    'User ID': firstItem['User ID'],\n                                    name: firstItem['Name'],\n                                    total: 1,\n                                    date: [firstItem['Date']]\n                                };\n                                dataDsDiTreByUser[ym][uid] = newItem2;\n                            }\n                        }\n                    }\n                }\n            });\n        });\n        return { dataDsDiTreByDate, dataDsDiTreByUser };\n    }\n\n    renderDSDiTre() {\n        let data = [];\n        if (!this.state.jsonIput) return null;\n        data = this.state.jsonIput || [];\n        const { dataDsDiTreByDate, dataDsDiTreByUser } = this.filterData(data);\n        console.log({ dataDsDiTreByDate, dataDsDiTreByUser });\n        data = dataDsDiTreByDate;\n        const dataFull = [];\n        let theadArr = null;\n        let bodyArr = [];\n        Object.keys(data).forEach((date, i) => {\n            const items = data[date];\n            if (!theadArr && items[0]) {\n                theadArr = <tr key={`item-thead-${date}-${i}`}>{this.renderThs(items[0], i, 'tables-2')}</tr>;\n            }\n            items.forEach((item, index) => {\n                dataFull.push(item);\n                let tr = <tr key={`item-${date}-${index}`}>{this.renderTds(item, index, 'tables-2')}</tr>;\n                bodyArr.push(tr);\n            });\n        });\n        this.dataDsDiTre = dataFull;\n        console.log({ dataFull });\n        let theadArr2 = null,\n            bodyArr2 = [],\n            dataTopDiTre = [];\n        Object.keys(dataDsDiTreByUser).forEach((ym, index) => {\n            const users = orderBy(dataDsDiTreByUser[ym], 'total', 'desc');\n            Object.keys(users).forEach((userId, index) => {\n                const userData = users[userId];\n                if(userData){\n                    userData.date = userData.date.join(';');\n                    if (!theadArr2) {\n                        theadArr2 = <tr key={`table2-item-thead-${userId}-${index}`}>{this.renderThs(userData, index)}</tr>;\n                    }\n                    let tds = this.renderTds(userData, index, 'table2-');\n                    const tr = <tr key={`tbody-2-tr-${index}`}>{tds}</tr>;\n                    bodyArr2.push(tr);\n                    dataTopDiTre.push(userData);\n                }\n            });\n        });\n        this.dataTopDiTre = dataTopDiTre;\n\n        return (\n            <Row>\n                <Col>\n                    <div className=\"data-table card\">\n                        <table className=\"table1\">\n                            <thead>{theadArr}</thead>\n                            <tbody>{bodyArr}</tbody>\n                        </table>\n                    </div>\n                </Col>\n                <Col>\n                    <div className=\"data-table card\">\n                        <table className=\"table2\">\n                            <thead>{theadArr2}</thead>\n                            <tbody>{bodyArr2}</tbody>\n                        </table>\n                    </div>\n                </Col>\n            </Row>\n        );\n    }\n\n    convertToCSV(objArray) {\n        var array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n        var str = '';\n\n        for (var i = 0; i < array.length; i++) {\n            var line = '';\n            for (var index in array[i]) {\n                if (line != '') line += ',';\n\n                line += array[i][index];\n            }\n\n            str += line + '\\r\\n';\n        }\n\n        return str;\n    }\n\n    exportCSVFile(items, fileTitle) {\n        var headers = {};\n        Object.keys(items[0]).forEach((key) => {\n            headers[key] = key;\n        });\n        items.unshift(headers);\n        // Convert Object to JSON\n        var jsonObject = JSON.stringify(items);\n\n        var csv = this.convertToCSV(jsonObject);\n\n        var exportedFileName = fileTitle + '_download.csv' || 'export.csv';\n\n        var blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n        saveAs(blob, exportedFileName);\n    }\n\n    onCopy() {\n        let arr = this.fileName.split('.');\n        arr.pop();\n        let fileName = arr.join('');\n        this.exportCSVFile(this.dataDsDiTre, fileName + '_list');\n        this.exportCSVFile(this.dataTopDiTre, fileName + '_top');\n    }\n}\n","import React from 'react';\nimport { Page, Navbar,List,ListItem } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"My Page\" />\n    <List>\n      <ListItem title=\"Item 1\" />\n      <ListItem title=\"Item 2\" />\n    </List>\n  </Page>\n);","import React from 'react';\nimport { App, View, Statusbar } from 'framework7-react';\nimport MainView from './screens/MainView';\nimport DataTransfer from './services/DataTransfer';\n\nimport routes from './routes';\n\nexport default class MainApp extends React.Component {\n    \n    componentDidMount() {\n        this.$f7ready && this.$f7ready((f7) => {\n            window.f7 = f7;\n            f7.on('routeChange', (newRoute, previousRoute, router) => {\n                this.onRouterChange(newRoute, previousRoute, router);\n            });\n            DataTransfer.F7App = f7;\n        });\n    }\n    onRouterChange(newRoute, previousRoute, router) {\n        console.log(newRoute, previousRoute, router);\n    }\n\n    render() {\n        const f7params = {\n            id: 'jp.co.omron.healthcare.riskreport', // App bundle ID\n            name: 'Risk Report', // App name\n            theme: 'ios', // Automatic theme detection\n            routes\n        };\n        return (\n            <App params={f7params}>\n                {/* Statusbar */}\n                <Statusbar />\n                {/* Main View */}\n                <MainView />\n            </App>\n        );\n    }\n}\n","\n\n// Import React and ReactDOM\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n// Import Framework7\nimport Framework7 from 'framework7/framework7.esm.bundle';\n// Import Framework7-React plugin\nimport Framework7React from 'framework7-react';\n// Framework7 styles\nimport 'framework7/css/framework7.bundle.min.css';\nimport './styles/icons.css';\n\n// page\nimport './index.scss';\n\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(\n  React.createElement(App),\n  document.getElementById('app'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}